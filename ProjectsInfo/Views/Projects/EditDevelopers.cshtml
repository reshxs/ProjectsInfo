@model ProjectsInfo.Models.Project

@{
    ViewData["Title"] = "Edit";
}

<h1 style="text-align:center;margin:2%">Developers</h1>


<div class="fix-header card-no-border">
    <div class="container-fluid">
        <div class="m-t-40">
            <div class="d-flex">
                <div class="mr-auto">
                    <div class="form-group">
                        <button id="demo-btn-addrow" class="btn btn-primary" style="width: 120%;height:40px">
                            Add developer
                        </button>
                    </div>
                </div>
                <div class="ml-auto">
                    <div class="form-group">
                        <input id="demo-input-search2" type="text" placeholder="Search" autocomplete="off">
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="margin-bottom:2%">
            <table id="demo-foo-addrow2" class="table table-bordered table-hover toggle-circle" data-page-size="7">
                <thead>
                    <tr>
                        <th data-sort-initial="true" data-toggle="true">FIO</th>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <th data-hide="phone, tablet">Mounth @i</th>
                        }
                        <th data-hide="phone, tablet">Sum of hours</th>
                        <th data-sort-ignore="true" class="min-width">Delete</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr>
                        <td colspan="@(Model.MonthsCount+3)">
                            <div class="text-right">
                                <ul class="pagination" style="float:right;margin:0">
                                </ul>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="table-responsive">
            <table id="demo-foo-addrow3" class="table table-bordered table-hover toggle-circle" data-page-size="1">
                <thead>
                    <tr>
                        <th data-sort-initial="true" data-toggle="true"></th>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <th data-hide="phone, tablet">Mounth @i</th>
                        }
                        <th data-hide="phone, tablet">Sum of hours</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Sum of hours</td>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <td>number</td>
                        }
                        <td>sum</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
        <div class="form-group" style="display: flex; flex-flow: row;margin-left:2%">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index">
                <button type="button" class="btn waves-effect waves-light btn-block btn-danger" style="margin-left:5%">
                    Back
                </button>
            </a>
        </div>
</div>
        <script>

            var table = document.querySelector('table');

            table.addEventListener('click', function func(event) {
                var td = event.target.closest('td.change');
                if (!td) return;
                var inputAttached = td.querySelector('input');
                if (inputAttached) return;

                var input = document.createElement('input');

                input.value = td.innerHTML;
                td.innerHTML = '';
                td.appendChild(input);
                input.focus();

                input.addEventListener('blur', function () {
                    td.innerHTML = input.value;
                });
            });

            var countadd = @Model.MonthsCount;
            
        </script>
        
    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
