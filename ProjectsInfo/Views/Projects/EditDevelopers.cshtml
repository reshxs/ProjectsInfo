@using ProjectsInfo.Controllers
@model ProjectsInfo.Models.Project

@{
    ViewData["Title"] = "Edit";
}

<h1 style="text-align:center;margin:2%">Developers</h1>


<div class="fix-header card-no-border">
    <div class="container-fluid">
        <div class="m-t-40">
            <div class="d-flex">
                <div class="mr-auto">
                    <div class="form-group">
                        <button id="demo-btn-addrow" class="btn btn-primary" style="width: 120%;height:40px">
                            Add developer
                        </button>
                    </div>
                </div>
                <div class="ml-auto">
                    <div class="form-group">
                        <input id="demo-input-search2" type="text" placeholder="Search" autocomplete="off">
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="margin-bottom:2%">
            <table id="demo-foo-addrow2" class="table table-bordered table-hover toggle-circle" data-page-size="7">
                <thead>
                    <tr>
                        <th data-sort-initial="true" data-toggle="true">FIO</th>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <th data-hide="phone, tablet">Mounth @i</th>
                        }
                        <th data-hide="phone, tablet">Sum of hours</th>
                        <th data-sort-ignore="true" class="min-width">Delete</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr>
                        <td colspan="@(Model.MonthsCount+3)">
                            <div class="text-right">
                                <ul class="pagination" style="float:right;margin:0">
                                </ul>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="table-responsive">
            <table id="demo-foo-addrow3" class="table table-bordered table-hover toggle-circle" data-page-size="1">
                <thead>
                    <tr>
                        <th data-sort-initial="true" data-toggle="true"></th>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <th data-hide="phone, tablet">Mounth @i</th>
                        }
                        <th data-hide="phone, tablet">Sum of hours</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Sum of hours</td>
                        @for (int i = 1; i < Model.MonthsCount + 1; i++)
                        {
                            <td>number</td>
                        }
                        <td>sum</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
        <div class="form-group" style="display: flex; flex-flow: row;margin-left:2%">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index">
                <button type="button" class="btn waves-effect waves-light btn-block btn-danger" style="margin-left:5%">
                    Back
                </button>
            </a>
        </div>
</div>
<script>

            var table = document.querySelector('table');

            table.addEventListener('click', function func(event) {
                var td = event.target.closest('td.change');
                if (!td) return;
                var inputAttached = td.querySelector('input');
                if (inputAttached) return;

                var input = document.createElement('input');

                input.value = td.innerHTML;
                td.innerHTML = '';
                td.appendChild(input);
                input.focus();

                input.addEventListener('blur', function () {
                    td.innerHTML = input.value;
                });
            });

            var countadd = @Model.MonthsCount;
            
        </script>

@section Scripts {

	<script>    
$(window).on('load', function() {
	
	// Row Toggler
	// -----------------------------------------------------------------
	$('#demo-foo-row-toggler').footable();

	// Accordion
	// -----------------------------------------------------------------
	$('#demo-foo-accordion').footable().on('footable_row_expanded', function(e) {
		$('#demo-foo-accordion tbody tr.footable-detail-show').not(e.row).each(function() {
			$('#demo-foo-accordion').data('footable').toggleDetail(this);
		});
	});

	// Pagination
	// -----------------------------------------------------------------
	$('#demo-foo-pagination').footable();
	$('#demo-show-entries').change(function (e) {
		e.preventDefault();
		var pageSize = $(this).val();
		$('#demo-foo-pagination').data('page-size', pageSize);
		$('#demo-foo-pagination').trigger('footable_initialized');
	});

	// Filtering
	// -----------------------------------------------------------------
	var filtering = $('#demo-foo-filtering');
	filtering.footable().on('footable_filtering', function (e) {
		var selected = $('#demo-foo-filter-status').find(':selected').val();
		e.filter += (e.filter && e.filter.length > 0) ? ' ' + selected : selected;
		e.clear = !e.filter;
	});

	// Filter status
	$('#demo-foo-filter-status').change(function (e) {
		e.preventDefault();
		filtering.trigger('footable_filter', {filter: $(this).val()});
	});

	// Search input
	$('#demo-foo-search').on('input', function (e) {
		e.preventDefault();
		filtering.trigger('footable_filter', {filter: $(this).val()});
	});


	

	// Search input
	$('#demo-input-search2').on('input', function (e) {
		e.preventDefault();
		addrow.trigger('footable_filter', {filter: $(this).val()});
	});
	
	// Add & Remove Row
	var addrow = $('#demo-foo-addrow');
	addrow.footable().on('click', '.delete-row-btn', function() {

		//get the footable object
		var footable = addrow.data('footable');

		//get the row we are wanting to delete
		var row = $(this).parents('tr:first');

		//delete the row
		footable.removeRow(row);
	});
    var addrow = $('#demo-foo-addrow2');
	addrow.footable().on('click', '.delete-row-btn', function() {

		//get the footable object
		var footable = addrow.data('footable');

		//get the row we are wanting to delete
		var row = $(this).parents('tr:first');

		//delete the row
		footable.removeRow(row);
	});
	// Add Row Button
	$('#demo-btn-addrow').click(function() {
		// Getting developers list
		$.get('@Url.Action("GetNotAssignedDevelopers", "Ajax")?id='+@Model.ID, function (data) {
			//populate list of tags with developers
			var developers = ''
			for (let i = 0; i < data.length; i++)
			{
				developers += '<button class="dropdown-item" id=' + data[i].developerID +'>' + data[i].name + '</button>\n'
			}
			
			//get the footable object
			var footable = addrow.data('footable');

			//build up the row we are wanting to add

			let rows = '';
			for (var i = 0; i < countadd; i++) {
				rows += '<td class="change"></td>'
			}

			var newRow = '<tr><td><div id="adddeveloper"><div class="btn-group">\n' +
				'<button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n' +
				'      Выбрать разработчика\n' +
				'</button>\n' +
				'<div class="dropdown-menu">\n' +
						developers +
				' </div>\n' +
				' </div></div></td>';
			newRow += rows;
			newRow += '<td>sum</td><td><button type="button" class="btn btn-sm btn-icon btn-pure btn-outline delete-row-btn" data-toggle="tooltip" data-original-title="Delete"><i class="ti-close" aria-hidden="true"></i></button></td></tr>'

			//add it
			footable.appendRow(newRow);
		})
	});
	$(document).on('click', '.dropdown-item', function (id){
		console.log(id.currentTarget)
		var name = $(id.currentTarget).text()
		$('#adddeveloper').replaceWith('<div>' + name + '<\div>')
		console.log(name)
	});
});

    </script>
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
